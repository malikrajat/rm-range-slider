{"version":3,"file":"rm-ng-range-slider.mjs","sources":["../../projects/rm-ng-range-slider/src/lib/rm-ng-range-slider.component.ts","../../projects/rm-ng-range-slider/src/lib/rm-ng-range-slider.component.html","../../projects/rm-ng-range-slider/src/rm-ng-range-slider.ts"],"sourcesContent":["\n\nimport {AfterViewInit, Component, ElementRef, input, viewChild, output, signal, WritableSignal, Signal, ChangeDetectionStrategy} from '@angular/core';\nimport {debounceTime, Subject} from 'rxjs';\n\n@Component({\n    selector: 'rm-ng-range-slider',\n    templateUrl: './rm-ng-range-slider.component.html',\n    imports: [],\n    styleUrls: ['./rm-ng-range-slider.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RmNgRangeSliderComponent implements AfterViewInit {\n  readonly min = input<number>(0);\n  readonly max = input<number>(100);\n  readonly leftColor = input<string>('#3498db'); // Default left color\n  readonly rightColor = input<string>('#e74c3c'); // Default right color\n  readonly leftTooltipColor = input<string>('#333'); // Default tooltip color for the left\n  readonly rightTooltipColor = input<string>('#e74c3c'); // Default tooltip color for the right\n  readonly lowSlider = viewChild.required<ElementRef<HTMLDivElement>>('lowSlider');\n  readonly rangeChanged = output<{\n    low: number;\n    high: number;\n}>();\n  lowValue:WritableSignal<number> = signal(25); // Default value for the left thumb\n  highValue:WritableSignal<number> = signal(75); // Default value for the right thumb\n  private rangeChangedSubject: Subject<{ low: number, high: number }> = new Subject<{ low: number, high: number }>();\n\n  ngAfterViewInit(): void {\n    this.updateSliderColors();\n    // Subscribe to the debounced range change subject\n    this.rangeChangedSubject.pipe(\n      debounceTime(300) // Adjust debounce time as needed\n    ).subscribe((range: { low: number, high: number }): void => {\n      this.rangeChanged.emit(range);\n    });\n  }\n\n  onLowThumbChange(event: Event): void {\n    let value: number = (event.target as HTMLInputElement).valueAsNumber;\n    // Ensure the new low value does not exceed the high value\n    if (value > this.highValue()) {\n      value = this.highValue();\n    }\n\n    this.lowValue.set(value);\n    this.emitRange();\n    this.updateSliderColors();\n  }\n\n  onHighThumbChange(event: Event): void {\n    let value: number = (event.target as HTMLInputElement).valueAsNumber;\n    // Ensure the new high value does not go below the low value\n    if (value < this.lowValue()) {\n      value = this.lowValue();\n    }\n\n    this.highValue.set(value);\n    this.emitRange();\n    this.updateSliderColors();\n  }\n\n  emitRange(): void {\n    this.rangeChangedSubject.next({low: this.lowValue(), high: this.highValue()});\n  }\n\n  updateSliderColors(): void {\n    const lowSlider = this.lowSlider().nativeElement;\n    const percentLow: number =\n      ((this.lowValue() - this.min()) / (this.max() - this.min())) * 100;\n    const percentHigh: number =\n      ((this.highValue() - this.min()) / (this.max() - this.min())) * 100;\n    lowSlider.style.background = `linear-gradient(to right, ${this.leftColor()} ${percentLow}%, ${this.rightColor()} ${percentHigh}%)`;\n  }\n}\n","<div class=\"slider-container\">\n  <input\n    #lowSlider\n    id=\"lowSlider\"\n    type=\"range\"\n    [min]=\"min()\"\n    [max]=\"max()\"\n    [value]=\"lowValue()\"\n    (input)=\"onLowThumbChange($event)\"\n    class=\"thumb low low-thumb\"\n  />\n  <input\n    id=\"highSlider\"\n    type=\"range\"\n    [min]=\"min()\"\n    [max]=\"max()\"\n    [value]=\"highValue()\"\n    (input)=\"onHighThumbChange($event)\"\n    class=\"thumb high high-thumb\"\n  />\n\n  <!-- Tooltip for the left thumb -->\n  <div\n    class=\"tooltip low-tooltip\"\n    [style.left.%]=\"(lowValue() - min()) / (max() - min()) * 100\"\n    [style.background]=\"leftTooltipColor()\">\n    {{ lowValue() }}\n  </div>\n\n  <!-- Tooltip for the right thumb -->\n  <div\n    class=\"tooltip high-tooltip\"\n    [style.left.%]=\"(highValue() - min()) / (max() - min()) * 100\"\n    [style.background]=\"rightTooltipColor()\">\n    {{ highValue() }}\n  </div>\n</div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}